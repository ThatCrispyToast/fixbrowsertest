/*
 * FixScript GUI v0.8 - https://www.fixscript.org/
 * Copyright (c) 2019-2024 Martin Dvorak <jezek2@advel.cz>
 *
 * This software is provided 'as-is', without any express or implied warranty.
 * In no event will the authors be held liable for any damages arising from
 * the use of this software.
 *
 * Permission is granted to anyone to use this software for any purpose, 
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 *
 * 1. The origin of this software must not be misrepresented; you must not
 *    claim that you wrote the original software. If you use this software
 *    in a product, an acknowledgment in the product documentation would be
 *    appreciated but is not required.
 * 2. Altered source versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 * 3. This notice may not be removed or altered from any source distribution.
 */

use "classes";

import "gui/view";

class Common
{
	static function get_double_click_delay(): Integer
	{
		var (r, e) = @common_get_double_click_delay();
		if (!is_available(e)) {
			return 500;
		}
		return r;
	}

	static function get_double_click_distance(): Integer
	{
		var (r, e) = @common_get_double_click_distance();
		if (!is_available(e)) {
			return 2;
		}
		return r;
	}

	static function get_cursor_blink_interval(): Integer
	{
		var (r, e) = @common_get_cursor_blink_interval();
		if (!is_available(e)) {
			return 500;
		}
		return r;
	}

	static function show_async_message(window: Window, type: Integer, title: String, message: String, callback, data)
	{
		var (r, e) = @common_show_async_message(window, type, title, message, callback, data);
		if (!is_available(e)) {
			var ret = show_message(window, type, title, message);
			if (callback) {
				callback(data, ret);
			}
		}
	}
}

function @is_available(e): Boolean
{
	if (e) {
		if (is_string(e)) return false;
		throw e;
	}
	return true;
}
