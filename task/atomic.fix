/*
 * FixScript Task v0.6 - https://www.fixscript.org/
 * Copyright (c) 2020-2024 Martin Dvorak <jezek2@advel.cz>
 *
 * This software is provided 'as-is', without any express or implied warranty.
 * In no event will the authors be held liable for any damages arising from
 * the use of this software.
 *
 * Permission is granted to anyone to use this software for any purpose, 
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 *
 * 1. The origin of this software must not be misrepresented; you must not
 *    claim that you wrote the original software. If you use this software
 *    in a product, an acknowledgment in the product documentation would be
 *    appreciated but is not required.
 * 2. Altered source versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 * 3. This notice may not be removed or altered from any source distribution.
 */

use "classes";

class Atomic
{
	static function get32(arr: Integer[], idx: Integer): Integer;
	static function get64(arr: Integer[], idx: Integer): Dynamic;
	static function set32(arr: Integer[], idx: Integer, value: Integer);
	static function set64(arr: Integer[], idx: Integer, lo: Integer, hi: Integer);
	static function add32(arr: Integer[], idx: Integer, value: Integer): Integer;
	static function add64(arr: Integer[], idx: Integer, lo: Integer, hi: Integer): Dynamic;
	static function cas32(arr: Integer[], idx: Integer, expected_value: Integer, new_value: Integer): Integer;
	static function cas64(arr: Integer[], idx: Integer, expected_lo: Integer, expected_hi: Integer, new_lo: Integer, new_hi: Integer): Dynamic;
	static function run(arr: Integer[], idx: Integer, func, data): Dynamic;
}
