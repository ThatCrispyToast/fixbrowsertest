/*
 * FixBrowser v0.1 - https://www.fixbrowser.org/
 * Copyright (c) 2018-2024 Martin Dvorak <jezek2@advel.cz>
 *
 * This software is provided 'as-is', without any express or implied warranty.
 * In no event will the authors be held liable for any damages arising from
 * the use of this software.
 *
 * Permission is granted to anyone to use this software for any purpose, 
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 *
 * 1. The origin of this software must not be misrepresented; you must not
 *    claim that you wrote the original software. If you use this software
 *    in a product, an acknowledgment in the product documentation would be
 *    appreciated but is not required.
 * 2. Altered source versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 * 3. This notice may not be removed or altered from any source distribution.
 */

import "browser/script/request";
import "browser/script/handle_types";

function @script_request_get_url(params, data)
{
	var request = script_get_handle(params[0], HANDLE_TYPE_REQUEST);
	return request_get_url(request);
}

function @script_request_get_scheme(params, data)
{
	var request = script_get_handle(params[0], HANDLE_TYPE_REQUEST);
	return request_get_scheme(request);
}

function @script_request_get_domain(params, data)
{
	var request = script_get_handle(params[0], HANDLE_TYPE_REQUEST);
	return request_get_domain(request);
}

function @script_request_get_path(params, data)
{
	var request = script_get_handle(params[0], HANDLE_TYPE_REQUEST);
	return request_get_path(request);
}

function @script_request_get_query(params, data)
{
	var request = script_get_handle(params[0], HANDLE_TYPE_REQUEST);
	return request_get_query(request);
}

function @script_request_get_params(params, data)
{
	var request = script_get_handle(params[0], HANDLE_TYPE_REQUEST);
	return request_get_params(request);
}

function @script_request_get_headers(params, data)
{
	var request = script_get_handle(params[0], HANDLE_TYPE_REQUEST);
	return request_get_headers(request);
}

function @script_request_set_redirect(params, data)
{
	var request = script_get_handle(params[0], HANDLE_TYPE_REQUEST);
	request_set_redirect(request, params[1]);
}

function @script_request_set_header(params, data)
{
	var request = script_get_handle(params[0], HANDLE_TYPE_REQUEST);
	request_set_header(request, params[1], params[2]);
}

function @script_request_replace_document(params, data)
{
	var request = script_get_handle(params[0], HANDLE_TYPE_REQUEST);
	var document = script_get_handle(params[1], HANDLE_TYPE_ELEMENT);
	request_replace_document(request, document);
}

function @script_request_add_same_domain(params, data)
{
	var request = script_get_handle(params[0], HANDLE_TYPE_REQUEST);
	request_add_same_domain(request, params[1], (length(params) == 3? params[2] : false));
}

function @script_request_set_same_domain_url(params, data)
{
	var request = script_get_handle(params[0], HANDLE_TYPE_REQUEST);
	request_set_same_domain_url(request, params[1]);
}

function register_request_funcs(heap)
{
	script_register_function(heap, "request_get_url#1", script_request_get_url#2, null);
	script_register_function(heap, "request_get_scheme#1", script_request_get_scheme#2, null);
	script_register_function(heap, "request_get_domain#1", script_request_get_domain#2, null);
	script_register_function(heap, "request_get_path#1", script_request_get_path#2, null);
	script_register_function(heap, "request_get_query#1", script_request_get_query#2, null);
	script_register_function(heap, "request_get_params#1", script_request_get_params#2, null);
	script_register_function(heap, "request_get_headers#1", script_request_get_headers#2, null);
	script_register_function(heap, "request_set_redirect#2", script_request_set_redirect#2, null);
	script_register_function(heap, "request_set_header#3", script_request_set_header#2, null);
	script_register_function(heap, "request_replace_document#2", script_request_replace_document#2, null);
	script_register_function(heap, "request_add_same_domain#2", script_request_add_same_domain#2, null);
	script_register_function(heap, "request_add_same_domain#3", script_request_add_same_domain#2, null);
	script_register_function(heap, "request_set_same_domain_url#2", script_request_set_same_domain_url#2, null);
}
